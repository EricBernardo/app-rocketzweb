{"remainingRequest":"E:\\www\\rocketzweb\\app-rocketzweb\\node_modules\\babel-loader\\lib\\index.js!E:\\www\\rocketzweb\\app-rocketzweb\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\www\\rocketzweb\\app-rocketzweb\\src\\router\\index.js","dependencies":[{"path":"E:\\www\\rocketzweb\\app-rocketzweb\\src\\router\\index.js","mtime":1557144556566},{"path":"E:\\www\\rocketzweb\\app-rocketzweb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\www\\rocketzweb\\app-rocketzweb\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\www\\rocketzweb\\app-rocketzweb\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"E:\\\\www\\\\rocketzweb\\\\app-rocketzweb\\\\node_modules\\\\@babel\\\\runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resetRouter = resetRouter;\nexports.default = exports.constantRoutes = void 0;\n\nvar _interopRequireWildcard2 = _interopRequireDefault(require(\"E:\\\\www\\\\rocketzweb\\\\app-rocketzweb\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/interopRequireWildcard\"));\n\nvar _layout = _interopRequireDefault(require(\"@/layout\"));\n\nvar _vue = _interopRequireDefault(require(\"vue\"));\n\nvar _vueRouter = _interopRequireDefault(require(\"vue-router\"));\n\n/* Layout */\n_vue.default.use(_vueRouter.default);\n/**\r\n * Note: sub-menu only appear when route children.length >= 1\r\n * Detail see: https://panjiachen.github.io/vue-element-admin-site/guide/essentials/router-and-nav.html\r\n *\r\n * hidden: true                   if set true, item will not show in the sidebar(default is false)\r\n * alwaysShow: true               if set true, will always show the root menu\r\n *                                if not set alwaysShow, when item has more than one children route,\r\n *                                it will becomes nested mode, otherwise not show the root menu\r\n * redirect: noRedirect           if set noRedirect will no redirect in the breadcrumb\r\n * name:'router-name'             the name is used by <keep-alive> (must set!!!)\r\n * meta : {\r\n    roles: ['admin','editor']    control the page roles (you can set multiple roles)\r\n    title: 'title'               the name show in sidebar and breadcrumb (recommend set)\r\n    icon: 'svg-name'             the icon show in the sidebar\r\n    breadcrumb: false            if set false, the item will hidden in breadcrumb(default is true)\r\n    activeMenu: '/example/list'  if set path, the sidebar will highlight the path you set\r\n  }\r\n */\n\n/**\r\n * constantRoutes\r\n * a base page that does not have permission requirements\r\n * all roles can be accessed\r\n */\n\n\nvar constantRoutes = [{\n  path: '/login',\n  roles: [],\n  component: function component() {\n    return Promise.resolve().then(function () {\n      return (0, _interopRequireWildcard2.default)(require('@/views/login/index'));\n    });\n  },\n  hidden: true\n}, {\n  path: '/404',\n  roles: [],\n  component: function component() {\n    return Promise.resolve().then(function () {\n      return (0, _interopRequireWildcard2.default)(require('@/views/404'));\n    });\n  },\n  hidden: true\n}, {\n  path: '/',\n  component: _layout.default,\n  roles: ['root', 'administrator', 'client'],\n  meta: {\n    title: 'Dashboard',\n    icon: 'dashboard'\n  },\n  children: [{\n    path: '',\n    name: 'dashboard',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/dashboard/index'));\n      });\n    },\n    hidden: true\n  }]\n}, {\n  path: '/company',\n  component: _layout.default,\n  roles: ['root'],\n  meta: {\n    title: 'Empresa',\n    icon: 'company'\n  },\n  children: [{\n    path: '',\n    name: 'company',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/company/list'));\n      });\n    },\n    hidden: true\n  }, {\n    path: 'create',\n    name: 'company.create',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/company/form'));\n      });\n    },\n    hidden: true,\n    meta: {\n      title: 'Cadastrar'\n    }\n  }, {\n    path: 'edit/:id',\n    name: 'company.edit',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/company/form'));\n      });\n    },\n    hidden: true,\n    meta: {\n      title: 'Editar'\n    }\n  }]\n}, {\n  path: '/client',\n  component: _layout.default,\n  roles: ['root', 'administrator', 'client'],\n  meta: {\n    title: 'Cliente',\n    icon: 'users'\n  },\n  children: [{\n    path: '',\n    name: 'client',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/client/list'));\n      });\n    },\n    hidden: true\n  }, {\n    path: 'create',\n    name: 'client.create',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/client/form'));\n      });\n    },\n    hidden: true,\n    meta: {\n      title: 'Cadastrar'\n    }\n  }, {\n    path: 'edit/:id',\n    name: 'client.edit',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/client/form'));\n      });\n    },\n    hidden: true,\n    meta: {\n      title: 'Editar'\n    }\n  }]\n}, {\n  path: '/product',\n  component: _layout.default,\n  roles: ['root', 'administrator', 'client'],\n  meta: {\n    title: 'Produto',\n    icon: 'product'\n  },\n  children: [{\n    path: '',\n    name: 'product',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/product/list'));\n      });\n    },\n    hidden: true\n  }, {\n    path: 'create',\n    name: 'product.create',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/product/form'));\n      });\n    },\n    hidden: true,\n    meta: {\n      title: 'Cadastrar'\n    }\n  }, {\n    path: 'edit/:id',\n    name: 'product.edit',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/product/form'));\n      });\n    },\n    hidden: true,\n    meta: {\n      title: 'Editar'\n    }\n  }]\n}, {\n  path: '/user',\n  component: _layout.default,\n  roles: ['root', 'administrator'],\n  meta: {\n    title: 'Usu√°rio',\n    icon: 'user'\n  },\n  children: [{\n    path: '',\n    name: 'user',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/user/list'));\n      });\n    },\n    hidden: true\n  }, {\n    path: 'create',\n    name: 'user.create',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/user/form'));\n      });\n    },\n    hidden: true,\n    meta: {\n      title: 'Cadastrar'\n    }\n  }, {\n    path: 'edit/:id',\n    name: 'user.edit',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/user/form'));\n      });\n    },\n    hidden: true,\n    meta: {\n      title: 'Editar'\n    }\n  }]\n}, {\n  path: '/order',\n  component: _layout.default,\n  roles: ['root', 'administrator', 'client'],\n  meta: {\n    title: 'Pedido',\n    icon: 'order'\n  },\n  children: [{\n    path: '',\n    name: 'order',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/order/index'));\n      });\n    },\n    hidden: true\n  }, {\n    path: 'create',\n    name: 'order.create',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/order/form'));\n      });\n    },\n    hidden: true,\n    meta: {\n      title: 'Cadastrar'\n    }\n  }, {\n    path: 'edit/:id',\n    name: 'order.edit',\n    component: function component() {\n      return Promise.resolve().then(function () {\n        return (0, _interopRequireWildcard2.default)(require('@/views/order/form'));\n      });\n    },\n    hidden: true,\n    meta: {\n      title: 'Editar'\n    }\n  }]\n}, // 404 page must be placed at the end !!!\n{\n  path: '*',\n  redirect: '/404',\n  hidden: true\n}];\nexports.constantRoutes = constantRoutes;\n\nvar createRouter = function createRouter() {\n  return new _vueRouter.default({\n    // mode: 'history', // require service support\n    scrollBehavior: function scrollBehavior() {\n      return {\n        y: 0\n      };\n    },\n    routes: constantRoutes\n  });\n};\n\nvar router = createRouter(); // Detail see: https://github.com/vuejs/vue-router/issues/1234#issuecomment-357941465\n\nfunction resetRouter() {\n  var newRouter = createRouter();\n  router.matcher = newRouter.matcher; // reset router\n}\n\nvar _default = router;\nexports.default = _default;",null]}