{"remainingRequest":"E:\\www\\rocketzweb\\app-rocketzweb\\node_modules\\babel-loader\\lib\\index.js!E:\\www\\rocketzweb\\app-rocketzweb\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\www\\rocketzweb\\app-rocketzweb\\src\\utils\\request.js","dependencies":[{"path":"E:\\www\\rocketzweb\\app-rocketzweb\\src\\utils\\request.js","mtime":1557144556575},{"path":"E:\\www\\rocketzweb\\app-rocketzweb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558094675814},{"path":"E:\\www\\rocketzweb\\app-rocketzweb\\node_modules\\babel-loader\\lib\\index.js","mtime":1558094675065},{"path":"E:\\www\\rocketzweb\\app-rocketzweb\\node_modules\\eslint-loader\\index.js","mtime":1558094683924}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"E:\\\\www\\\\rocketzweb\\\\app-rocketzweb\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/interopRequireDefault\");\n\nvar _Object$defineProperty = require(\"E:\\\\www\\\\rocketzweb\\\\app-rocketzweb\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/object/define-property\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _values = _interopRequireDefault(require(\"E:\\\\www\\\\rocketzweb\\\\app-rocketzweb\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/object/values\"));\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nvar _promise = _interopRequireDefault(require(\"E:\\\\www\\\\rocketzweb\\\\app-rocketzweb\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/promise\"));\n\nvar _router = _interopRequireDefault(require(\"@/router\"));\n\nvar _store = _interopRequireDefault(require(\"@/store\"));\n\nvar _auth = require(\"@/utils/auth\");\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nvar _elementUi = require(\"element-ui\");\n\n// create an axios instance\nvar service = _axios.default.create({\n  baseURL: process.env.VUE_APP_BASE_API,\n  // url = base url + request url\n  withCredentials: false,\n  // send cookies when cross-domain requests\n  timeout: 5000 // request timeout\n\n}); // request interceptor\n\n\nservice.interceptors.request.use(function (config) {\n  // do something before request is sent\n  if (_store.default.getters.token) {\n    // let each request carry token\n    // ['X-Token'] is a custom headers key\n    // please modify it according to the actual situation\n    config.headers['Authorization'] = 'Bearer ' + (0, _auth.getToken)();\n  }\n\n  return config;\n}, function (error) {\n  // do something with request error\n  console.log(error); // for debug\n\n  return _promise.default.reject(error);\n}); // response interceptor\n\nservice.interceptors.response.use(\n/**\r\n * If you want to get http information such as headers or status\r\n * Please return  response => response\r\n */\n\n/**\r\n * Determine the request status by custom code\r\n * Here is just an example\r\n * You can also judge the status by HTTP Status Code\r\n */\nfunction (response) {\n  return response; // // if the custom code is not 20000, it is judged as an error.\n  // if (res.code !== 20000) {\n  //   Message({\n  //     message: res.message || 'error',\n  //     type: 'error',\n  //     duration: 5 * 1000\n  //   })\n  //   // 50008: Illegal token; 50012: Other clients logged in; 50014: Token expired;\n  //   if (res.code === 50008 || res.code === 50012 || res.code === 50014) {\n  //     // to re-login\n  //     MessageBox.confirm('You have been logged out, you can cancel to stay on this page, or log in again', 'Confirm logout', {\n  //       confirmButtonText: 'Re-Login',\n  //       cancelButtonText: 'Cancel',\n  //       type: 'warning'\n  //     }).then(() => {\n  //       store.dispatch('user/resetToken').then(() => {\n  //         location.reload()\n  //       })\n  //     })\n  //   }\n  //   return Promise.reject(res.message || 'error')\n  // } else {\n  //   return res\n  // }\n}, function (error) {\n  var text = '';\n\n  if (error.response.status === 422) {\n    (0, _values.default)(error.response.data.errors).forEach(function (values, key) {\n      if (!key) {\n        text += '<hr style=\"height:1px;border:none;color:red;background-color:red;\" />';\n      }\n\n      values.forEach(function (value) {\n        text += '<p>' + value + '</p>';\n      });\n    });\n  }\n\n  (0, _elementUi.Message)({\n    message: '<b>' + error.response.data.message + '</b>' + text,\n    type: 'error',\n    duration: 5 * 1000,\n    dangerouslyUseHTMLString: true\n  });\n\n  if (error.response.status === 403) {\n    _router.default.push({\n      name: 'dashboard'\n    });\n  }\n\n  if (error.response.status === 401) {\n    (0, _auth.removeToken)();\n\n    if (location.hash.indexOf('login') === -1) {\n      setTimeout(function () {\n        location.reload();\n      }, 1000);\n    }\n  }\n\n  return _promise.default.reject(error);\n});\nvar _default = service;\nexports.default = _default;",null]}