{"remainingRequest":"/home/eric/code/app-rocketzweb/node_modules/thread-loader/dist/cjs.js!/home/eric/code/app-rocketzweb/node_modules/babel-loader/lib/index.js!/home/eric/code/app-rocketzweb/src/store/modules/user.js","dependencies":[{"path":"/home/eric/code/app-rocketzweb/src/store/modules/user.js","mtime":1556977768946},{"path":"/home/eric/code/app-rocketzweb/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/eric/code/app-rocketzweb/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/eric/code/app-rocketzweb/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport _Promise from \"/home/eric/code/app-rocketzweb/node_modules/@babel/runtime-corejs2/core-js/promise\";\nimport { getInfo as _getInfo, login as _login } from '@/api/user';\nimport { resetRouter } from '@/router';\nimport { getToken, removeToken, setToken } from '@/utils/auth';\nvar state = {\n  token: getToken(),\n  name: '',\n  avatar: '',\n  role: ''\n};\nvar mutations = {\n  SET_TOKEN: function SET_TOKEN(state, token) {\n    state.token = token;\n  },\n  SET_NAME: function SET_NAME(state, name) {\n    state.name = name;\n  },\n  SET_AVATAR: function SET_AVATAR(state, avatar) {\n    state.avatar = avatar;\n  },\n  SET_ROLE: function SET_ROLE(state, role) {\n    state.role = role;\n  }\n};\nvar actions = {\n  // user login\n  login: function login(_ref, userInfo) {\n    var commit = _ref.commit;\n    var username = userInfo.username,\n        password = userInfo.password;\n    return new _Promise(function (resolve, reject) {\n      _login({\n        username: username.trim(),\n        password: password\n      }).then(function (response) {\n        var data = response.data;\n        commit('SET_TOKEN', data.access_token);\n        setToken(data.access_token);\n        resolve();\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // get user info\n  getInfo: function getInfo(_ref2) {\n    var commit = _ref2.commit,\n        state = _ref2.state;\n    return new _Promise(function (resolve, reject) {\n      _getInfo(state.token).then(function (response) {\n        var data = response.data.data;\n\n        if (!data) {\n          reject('Verification failed, please Login again.');\n        }\n\n        var name = data.name,\n            avatar = data.avatar,\n            role = data.role;\n        commit('SET_NAME', name);\n        commit('SET_AVATAR', avatar);\n        commit('SET_ROLE', role);\n        resolve(data);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // user logout\n  logout: function logout(_ref3) {\n    var commit = _ref3.commit,\n        state = _ref3.state;\n    return new _Promise(function (resolve, reject) {\n      commit('SET_TOKEN', '');\n      commit('SET_NAME', '');\n      commit('SET_ROLE', '');\n      removeToken();\n      resetRouter();\n      resolve();\n    });\n  },\n  // remove token\n  resetToken: function resetToken(_ref4) {\n    var commit = _ref4.commit;\n    return new _Promise(function (resolve) {\n      commit('SET_TOKEN', '');\n      removeToken();\n      resolve();\n    });\n  }\n};\nexport default {\n  namespaced: true,\n  state: state,\n  mutations: mutations,\n  actions: actions\n};",null]}