{"remainingRequest":"/home/eric/code/app-rocketzweb/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/eric/code/app-rocketzweb/src/views/user/form.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/eric/code/app-rocketzweb/src/views/user/form.vue","mtime":1556995694777},{"path":"/home/eric/code/app-rocketzweb/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/eric/code/app-rocketzweb/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/eric/code/app-rocketzweb/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/eric/code/app-rocketzweb/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { getAllCompany } from \"@/api/company\";\nimport { getAllClients } from \"@/api/client\";\nimport { show, save } from \"@/api/user\";\n\nexport default {\n  data() {\n    return {\n      companies: [],\n      clients: [],\n      rolesUser: [\n        { value: \"root\", label: \"Root\" },\n        { value: \"administrator\", label: \"Administrador\" },\n        { value: \"client\", label: \"Cliente\" }\n      ],\n      loading: false,\n      form: {\n        name: null,\n        email: null,\n        password: null,\n        password_confirmation: null,\n        role: null,\n        client_id: null,\n        company_id: null\n      },\n      rules: {\n        name: [\n          {\n            required: true\n          }\n        ],\n        email: [\n          {\n            required: true,\n            type: \"email\"\n          }\n        ],\n        password: [\n          {\n            required: !this.$route.params.id,\n            min: 6\n          }\n        ],\n        role: [\n          {\n            required: true\n          }\n        ],\n        password_confirmation: [\n          {\n            validator: (rule, value, callback) => {\n              if (this.form.password && value !== this.form.password) {\n                callback(new Error(\"As senhas nÃ£o combinam!\"));\n              } else {\n                callback();\n              }\n            },\n            trigger: \"blur\"\n          }\n        ],\n        client_id: [\n          {\n            required: true\n          }\n        ],\n        company_id: [\n          {\n            required: true\n          }\n        ]\n      }\n    };\n  },\n  created() {\n    getAllCompany().then(response => {\n      this.companies = response.data.data;\n    });\n\n    getAllClients().then(response => {\n      this.clients = response.data.data;\n    });\n\n    if (this.$route.params.id) {\n      this.loading = true;\n      show(this.$route.params.id).then(response => {\n        Object.keys(this.form).forEach(key => {\n          this.form[key] = response.data.data[key];\n        });\n        this.loading = false;\n      });\n    }\n  },\n  methods: {\n    onSubmit(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          this.loading = true;\n          save(this.form, this.$route.params.id)\n            .then(response => {\n              this.$message({\n                message: \"Salvo com sucesso\",\n                type: \"success\",\n                duration: 5 * 1000\n              });\n              if (!this.$route.params.id) {\n                this.$refs[formName].resetFields();\n              }\n            })\n            .finally(responde => {\n              this.loading = false;\n            });\n        }\n      });\n    }\n  }\n};\n",null]}