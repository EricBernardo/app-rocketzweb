{"remainingRequest":"E:\\www\\rocketzweb\\app-rocketzweb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\www\\rocketzweb\\app-rocketzweb\\src\\views\\user\\form.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\www\\rocketzweb\\app-rocketzweb\\src\\views\\user\\form.vue","mtime":1557144556580},{"path":"E:\\www\\rocketzweb\\app-rocketzweb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\www\\rocketzweb\\app-rocketzweb\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\www\\rocketzweb\\app-rocketzweb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\www\\rocketzweb\\app-rocketzweb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { getAllCompany } from \"@/api/company\";\r\nimport { getAllClients } from \"@/api/client\";\r\nimport { show, save } from \"@/api/user\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      companies: [],\r\n      clients: [],\r\n      rolesUser: [\r\n        { value: \"root\", label: \"Root\" },\r\n        { value: \"administrator\", label: \"Administrador\" },\r\n        { value: \"client\", label: \"Cliente\" }\r\n      ],\r\n      loading: false,\r\n      form: {\r\n        name: null,\r\n        email: null,\r\n        password: null,\r\n        password_confirmation: null,\r\n        role: null,\r\n        client_id: null,\r\n        company_id: null\r\n      },\r\n      rules: {\r\n        name: [\r\n          {\r\n            required: true\r\n          }\r\n        ],\r\n        email: [\r\n          {\r\n            required: true,\r\n            type: \"email\"\r\n          }\r\n        ],\r\n        password: [\r\n          {\r\n            required: !this.$route.params.id,\r\n            min: 6\r\n          }\r\n        ],\r\n        role: [\r\n          {\r\n            required: true\r\n          }\r\n        ],\r\n        password_confirmation: [\r\n          {\r\n            validator: (rule, value, callback) => {\r\n              if (this.form.password && value !== this.form.password) {\r\n                callback(new Error(\"As senhas nÃ£o combinam!\"));\r\n              } else {\r\n                callback();\r\n              }\r\n            },\r\n            trigger: \"blur\"\r\n          }\r\n        ],\r\n        client_id: [\r\n          {\r\n            required: true\r\n          }\r\n        ],\r\n        company_id: [\r\n          {\r\n            required: true\r\n          }\r\n        ]\r\n      }\r\n    };\r\n  },\r\n  created() {\r\n    getAllCompany().then(response => {\r\n      this.companies = response.data.data;\r\n    });\r\n\r\n    getAllClients().then(response => {\r\n      this.clients = response.data.data;\r\n    });\r\n\r\n    if (this.$route.params.id) {\r\n      this.loading = true;\r\n      show(this.$route.params.id).then(response => {\r\n        Object.keys(this.form).forEach(key => {\r\n          this.form[key] = response.data.data[key];\r\n        });\r\n        this.loading = false;\r\n      });\r\n    }\r\n  },\r\n  methods: {\r\n    onSubmit(formName) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          this.loading = true;\r\n          save(this.form, this.$route.params.id)\r\n            .then(response => {\r\n              this.$message({\r\n                message: \"Salvo com sucesso\",\r\n                type: \"success\",\r\n                duration: 5 * 1000\r\n              });\r\n              if (!this.$route.params.id) {\r\n                this.$refs[formName].resetFields();\r\n              }\r\n            })\r\n            .finally(responde => {\r\n              this.loading = false;\r\n            });\r\n        }\r\n      });\r\n    }\r\n  }\r\n};\r\n",null]}